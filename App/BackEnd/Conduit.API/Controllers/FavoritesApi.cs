/*
 * Conduit API
 *
 * Conduit API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Net;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Http;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using Conduit.API.Attributes;
using Conduit.API.Models;

namespace Conduit.API.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class FavoritesApiController : ControllerBase
    { 
        /// <summary>
        /// Favorite an article
        /// </summary>
        /// <remarks>Favorite an article. Auth is required</remarks>
        /// <param name="slug">Slug of the article that you want to favorite</param>
        /// <response code="200">OK</response>
        /// <response code="401">Unauthorized</response>
        /// <response code="422">Unexpected error</response>
        [HttpPost]
        [Route("/api/articles/{slug}/favorite")]
        [Authorize(Policy = "Token")]
        [ValidateModelState]
        [SwaggerOperation("CreateArticleFavorite")]
        [SwaggerResponse(statusCode: 200, type: typeof(SingleArticleResponse), description: "OK")]
        [SwaggerResponse(statusCode: 422, type: typeof(GenericErrorModel), description: "Unexpected error")]
        public virtual async Task<IActionResult> CreateArticleFavorite([FromRoute (Name = "slug")][Required]string slug)
        {
            return StatusCode((int)HttpStatusCode.NotImplemented);
        }

        /// <summary>
        /// Unfavorite an article
        /// </summary>
        /// <remarks>Unfavorite an article. Auth is required</remarks>
        /// <param name="slug">Slug of the article that you want to unfavorite</param>
        /// <response code="200">OK</response>
        /// <response code="401">Unauthorized</response>
        /// <response code="422">Unexpected error</response>
        [HttpDelete]
        [Route("/api/articles/{slug}/favorite")]
        [Authorize(Policy = "Token")]
        [ValidateModelState]
        [SwaggerOperation("DeleteArticleFavorite")]
        [SwaggerResponse(statusCode: 200, type: typeof(SingleArticleResponse), description: "OK")]
        [SwaggerResponse(statusCode: 422, type: typeof(GenericErrorModel), description: "Unexpected error")]
        public virtual async Task<IActionResult> DeleteArticleFavorite([FromRoute (Name = "slug")][Required]string slug)
        {
            return StatusCode((int)HttpStatusCode.NotImplemented);
        }
    }
}
